{
  "name": "Cluster Blog Post Automation (Wautomate)",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.perplexity.ai/chat/completions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"sonar-pro\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"Act as a professional news / information researcher who is capable of finding detailed summaries about a news article or informations topics from highly reputabel sources. Be concise and percise.\"\n    },\n    {\n      \"role\": \"user\",\n        \"content\": \"You are helping in research for a blog article post. Please provide in depth research for each of the titles of the following blog plan : ' {{ $json.text.split(/\\n+/).join(' ').replace(/\"/g, '\\\\\"') }} '\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -400,
        140
      ],
      "id": "e5516633-382c-4c09-bb02-20f049287d79",
      "name": "Research (Perplexity AI)",
      "credentials": {
        "httpHeaderAuth": {
          "id": "mQ01OSlXsYEwILlv",
          "name": "Perplexity Auth account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "23b8e8c4-9191-415a-9661-1b60d413528a",
              "name": "research",
              "value": "={{ $json.choices[0].message.content.replaceAll(\"[1]\", \" - source: \" +$json.citations[0]).replaceAll(\"[2]\",\" source:\" +$json.citations[1]).replaceAll(\"[3]\",\" - source: \" +$json.citations[2]).replaceAll(\"[4]\",\" - source: \"+$json.citations[3]).replaceAll(\"[5]\",\" - source: \"+$json.citations[4]).replaceAll(\"[6]\",\" - source: \"+$json.citations[5]).replaceAll(\"[7]\",\" - source: \"+$json.citations[6]).replaceAll(\"[8]\",\" - source: \"+$json.citations[7]).replaceAll(\"[9]\",\" - source: \"+$json.citations[8]).replaceAll(\"[10]\",\" - source: \"+$json.citations[9]) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -180,
        140
      ],
      "id": "6b362c42-4e72-4135-9d4d-e5a8efa1a315",
      "name": "Fix Citation Links"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-pro-exp",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        440,
        860
      ],
      "id": "517002cc-c72e-45f1-b10b-e1a771584e57",
      "name": "Google Gemini Chat Model (Pro)",
      "credentials": {
        "googlePalmApi": {
          "id": "HUOBqHMsVZzUprUx",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-thinking-exp-01-21",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        0,
        860
      ],
      "id": "052b6896-8f09-4beb-aee6-b704c7742742",
      "name": "Google Gemini Chat Model (Flash-Thinking)",
      "credentials": {
        "googlePalmApi": {
          "id": "HUOBqHMsVZzUprUx",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-001",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1060,
        860
      ],
      "id": "9d0a0949-3dc8-417b-88ce-fad5c131ca25",
      "name": "Google Gemini Chat Model (Flash)",
      "credentials": {
        "googlePalmApi": {
          "id": "HUOBqHMsVZzUprUx",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "19b808f2-84dc-80c0-89c2-ed26d11b9049",
          "mode": "list",
          "cachedResultName": "Cluster Post Template Database",
          "cachedResultUrl": "https://www.notion.so/19b808f284dc80c089c2ed26d11b9049"
        },
        "limit": 1,
        "filterType": "manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "key": "Completed|status",
              "condition": "equals",
              "statusValue": "Not started"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        -960,
        140
      ],
      "id": "c785bdbb-9e4b-4a60-b599-5b2fa6878ce5",
      "name": "Grab New Cluster Info",
      "credentials": {
        "notionApi": {
          "id": "SpycmLTyq3UWgNYR",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "19c808f2-84dc-8090-bdd9-d5b87ad368e2",
          "mode": "list",
          "cachedResultName": "Completed Blog Post Database",
          "cachedResultUrl": "https://www.notion.so/19c808f284dc8090bdd9d5b87ad368e2"
        },
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        680,
        180
      ],
      "id": "5012216b-4d00-4b7f-8282-79d447edf3c4",
      "name": "Grab All Previous Posts",
      "alwaysOutputData": true,
      "credentials": {
        "notionApi": {
          "id": "SpycmLTyq3UWgNYR",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are part of a team that creates world class blog posts. \n\nFor each new blog post project, you are provided with a list of keywords, a primary keyword, search intent, research findings and a preliminary blog post plan. Here's a definition of each of the inputs: \n\n- Keywords: These are the keywordswhich the blog post is meant to rank for on SEO. They should be scattered throughout the blog post intelligently to help with SEO. \n\n- Search intent: The search intent recognises the intent of the user when searching up the keyword. Our goal is to optimise the blog post to be highly relevant and valuable to the user, as such the search intent should be satisfied within the blog post. \n\n- Research findings: This is research found from very reputable resources in relation to the blog post. You must intelligently use this research to make your blog post more reputable. \n\n- Preliminary plan: Very basic plan set out by your colleague to kick off the blog post. \n\n- Primary keyword: Out of the keywords, there is one keyword known as the primary keyword. The primary keyword is the keyword which has the highest SEO importance and as such must go in the title and first few sentences of the blog post. It is important that the blog post is highly relevant to the primary keyword, so that it could be placed naturally into the title and introduction sections. \n\n\nGiven the said info, you must create a detailed plan for the blog post. \n \nYour output must: \n\n- Include a plan for the blog post.\n\n- Be in dot point format. \n\n- In each part of the blog post, you must mention which keywords should be placed. \n\nHere are the other things you must consider: \n\n- All keywords must be placed inside the blog post. For each section, mention which keywords to include. The keyword placement must feel natural and must make sense. \n\n- You must include all research points in the blog post. When including the research points, make sure to also include their source URL so that the copywriter can use them as hyperlinks. \n\n- You must ensure that the plan created satisfies the search intent and revolves directly around the given keywords. \n\n- Your plan must be very detailed. \n\n- Keep in mind the copywriter that will use your plan to write the blog post is not an expert in the topic of the blog post. So you should give them all the detail required so they can just turn it into nicely formatted paragraphs. So your plan should include all technical detail regarding each point to be in the blog post. For example instead of saying \"define X\", you must have \"define X as ...\". \n\n- The plan you create must have a flow that makes sense. \n\n- You must ensure the bog post will be highly detailed and satisfy the most important concepts regarding the topic. \n\n- You must consider the blog post content will be around 2000 to 2500 words in length.\n\nA new project has just came across your desk with below details:\n\nKeywords: \n{{ $('Grab New Cluster Info').item.json.property_keywords }}\n\nSearch intent: \n{{ $('Grab New Cluster Info').item.json.property_intent }}\n\nPreliminary plan: \n{{ $('Preliminary Plan').item.json.text }}\n\nResearch findings: \n{{ $json.research }}\n\nPrimary keyword: \n{{ $('Grab New Cluster Info').item.json.property_primary_keyword }}\n\nCreate the detailed plan. \n\nYour output must only be the plan and nothing else. \n"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        0,
        0
      ],
      "id": "bdecb777-16de-4fab-87af-131e5bb820b2",
      "name": "Post-Planning"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are part of a team that creates world class blog posts. \n\nYou are the teams best copywriter and are responsible for writing out the actual blog post. \n\nFor each new blog post project you are provided with a detailed plan and research findings. \n\nYour job is to create the blog post by closely following the detailed plan. \n\nThe blog post you create must: \n\n- Follow the plan bit by bit. \n\n- Use short paragraphs. \n\n- Use bullet points and subheadings with keywords where appropriate.  \n\n- Not have any fluff. The content of the blog must be value dense and direct. \n\n- Be very detailed. \n\n- Include the keywords mentioned in each section within that section. \n\n- Use the research as advised by the plan. Make sure to include the link associated with each point you extract from the research at the end of that section in the form of a URL.  \n\n- Place the primary keyword in the blog title, H1 header and early in the introduction. \n\n- Place one keyword for each section in the heading of that section. \n\n-  When possible pepper synonyms of the keywords throughout each section. \n\n- When possible use Latent Semantic Indexing (LSI) keywords and related terms to enhance context (e.g., “robotic process automation” for RPA). \n\n- Be at minimum 2000 to 2500 words long. \n\n- Be suitable for a year 5 reading level.\n\nMake sure to create the entire blog post draft in your first output. Don't stop or cut it short. \n\nHere are the details of your next blog post project: \n\nDetailed Plan: \n{{ $json.text }}\n\nDetailed Research: \n\n{{ $('Fix Citation Links').item.json.research }}\n\nWrite the blog post.\n"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        340,
        0
      ],
      "id": "880ece56-23d6-4c2b-ac54-056a3867169c",
      "name": "Blog Writer"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are part of a team that creates world class blog posts. \n\nYou are in charge of internal linking between blog posts. \n\nFor each new blog post that comes across your desk, your job is to look through previously posted blogs and make atleast 5 internal links. \n\nTo choose the best internal linking opportunities you must: \n\n- Read the previous blog post summaries and look through their keywords. If there is a match where the previous blog post is highly relevant, then this is an internal linking opportunity. \n\n- Do not link if it is not highly relevant. Only make a link if it makes sense and adds value for the reader. \n\nOnce you've found the best linking opportunities, you must update the blog post with the internal links. To do this you must: \n\n- Add the link of the previous blog post at the relevant section of the new blog post. Drop the URL at the place which makes most sense. Later we will hyperlink the URL to the word in the blog post which it is placed next to. So your placing is very important. \n\nMake sure to not delete any existing URLs or change anything about the blog post provided to you. You must only add new internal linking URLs and output the revised blog post. \n\nYour output must be the blog post given to you plus the new urls. Don't remove any info. \n\nDon't return the previous blog posts. Only return the current blog post with the internal links added. \n\nImportant Note :\n1. Ignore previous blog posts input if its empty.\n3. Do NOT include markdown, additional text, or keys outside this list.\n\nCurrent blog Post: \n{{ $('Blog Writer').item.json.text }}\n\nPrevious Blog Posts: \n{{ $json['previous-posts'].toJsonString() }}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1040,
        0
      ],
      "id": "5291fe64-29c6-4cb6-b2e4-c32cf165a353",
      "name": "Add Internal Links"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=DO NOT OUTPUT ANYTHING OTHER THAN THE CODE. I want you to follow the layout of the template as a guide to generate the WordPress code for a blog post. Here are the rules to follow:\n\nThe blog post should have a title, estimated reading time, key takeaways, table of contents, body, and FAQ in this order.\nMake it engaging by using italics, dot points, quotes, bold, spaces, and sometimes new lines. Never use emojis.\nThe blog post will have some URLs referenced next to certain keyphrases to show where the info came from. You must hyperlink the keyphrase with the provided URL so that the reader can click on the referenced URL. It is critical you get this right.\nWrap the entire content in a <div> with inline CSS that ensures optimal readability on a white background. Use a dark gray text color (#333333) for better contrast, a legible font such as 'Arial, sans-serif', and set the line-height to 1.8 for comfortable reading. All non-heading text elements (e.g., paragraphs, list items) should have an inline or embedded style that sets their font size to 18px and color to #333333 using !important to maintain consistency. Hyperlinks, table of contents points, and FAQ questions must be highlighted in a vibrant blue (#007bff) for clear distinction. Headings and subheadings should feature a subtle bottom border in blue (#007bff) with balanced padding to create a structured reading flow. \nPlace a double break (<br><br>) between major sections to enhance readability and ensure a clutter-free layout.\n\nBlog post: \n{{ $json.text }}\n\n\nGenerate blog content in HTML format. Follow these rules:\n- Use ONLY HTML tags (e.g., <p>, <h1>, <ul>).\n- NEVER include Markdown (no ```, **, or #), JSON, or code blocks.\n- Return raw HTML as a plain string.\n\nHere's an example of a well formatted output:\n\n<div style=\"color: #333333; font-family: Arial, sans-serif; line-height: 1.8; background-color: #ffffff;\"><h1 style=\"border-bottom: 2px solid #007bff; padding-bottom: 5px;\">Blog Title</h1><br><br><p style=\"font-size: 18px !important; color: #333333 !important;\">Welcome to my blog post, designed for optimal readability and a clear, structured layout.</p><br><br><h2 style=\"border-bottom: 2px solid #007bff; padding-bottom: 5px;\">Table of Contents</h2><ul style=\"font-size: 18px !important; color: #333333 !important;\"><li><a href=\"#section1\" style=\"color: #007bff;\">Section 1</a></li><li><a href=\"#section2\" style=\"color: #007bff;\">Section 2</a></li></ul><br><br><h2 style=\"border-bottom: 2px solid #007bff; padding-bottom: 5px;\">Section 1</h2><p id=\"section1\" style=\"font-size: 18px !important; color: #333333 !important;\">This section introduces the main topics of the post with clear and concise explanations.</p><br><br><h2 style=\"border-bottom: 2px solid #007bff; padding-bottom: 5px;\">Section 2</h2><p id=\"section2\" style=\"font-size: 18px !important; color: #333333 !important;\">Detailed insights and further discussion are provided here, along with <a href=\"#\" style=\"color: #007bff;\">additional resources</a> for reference.</p><br><br><h2 style=\"border-bottom: 2px solid #007bff; padding-bottom: 5px;\">FAQ</h2><p style=\"font-size: 18px !important; color: #333333 !important;\"><strong style=\"color: #007bff;\">Q:</strong> How can I implement this styling?<br><strong style=\"color: #007bff;\">A:</strong> Simply copy the code and adjust the content as needed.</p></div>"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1380,
        0
      ],
      "id": "2a7b86f8-13a8-408f-bf4f-86fa32e870bc",
      "name": "Convert To HTML",
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Create a slug for the following blog post: \n{{ $('Add Internal Links').item.json.text }}\n\nA slug in a blog post is the part of the URL that comes after the domain name and identifies a specific page. It is typically a short, descriptive phrase that summarizes the content of the post, making it easier for users and search engines to understand what the page is about. For example, in the URL www.example.com/intelligent-agents, the slug is intelligent-agents. A good slug is concise, contains relevant keywords, and avoids unnecessary words to improve readability and SEO. \n\nThe slug must be 4 or 5 words max and must include the primary keyword of the blog post which is {{ $('Grab New Cluster Info').item.json.property_primary_keyword }}.\n\nYour output must be the slug and nothing else so that I can copy and paste your output and put it at the end of my blog post URL to post it right away.Your output also must be concise, not more than 75 characters."
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1940,
        0
      ],
      "id": "b9a34373-ed7a-4e7a-8986-5b92b08fb448",
      "name": "Slug Generator"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Extract the blog post title from the following blog post: \n{{ $('Add Internal Links').item.json.text }}\n\nThe blog post title must include the primary keyword '{{ $('Grab New Cluster Info').item.json.property_primary_keyword }}' and must inform the users right away of what they can expect from reading the blog post. \n\n- Don't put the output in \"\". The output should just text with no markdown or formatting. \n\nYour output must only be the blog post title and nothing else.Your blog post title should be SEO-optimized, concise , not to lengthy and attention grabbing."
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        2300,
        0
      ],
      "id": "c2c8a208-eb93-4be4-8f64-e88a9b060594",
      "name": "Blog Title"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Create a good meta description for the following blog post: \n{{ $('Add Internal Links').item.json.text }}\n\nA good meta description for a blog post that is SEO-optimized should:\n- Be Concise: Stick to less than 145 characters to ensure the full description displays in search results. \n- Include Keywords: Incorporate primary keywords naturally to improve visibility and relevance to search queries.\n\nPrimary keyword = {{ $('Grab New Cluster Info').item.json.property_primary_keyword }}\n\nMore keywords to include if possible = {{ $('Grab New Cluster Info').item.json.property_keywords }}\n\n- Provide Value: Clearly describe what the reader will learn or gain by clicking the link. \n\n- Be Engaging: Use persuasive language, such as action verbs or a question, to encourage clicks. \n\n- Align with Content: Ensure the description accurately reflects the blog post to meet user expectations and reduce bounce rates. \n\nYour output must only be the meta description and nothing else.Your output of meta description should be SEO-optimized. Your output must less than 145 characters in total (characters counting including letters,special characters and numbers).\n"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        2640,
        0
      ],
      "id": "88ad4d59-21d9-4b52-9bc7-64512ea29521",
      "name": "Meta Description"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Role :\nYou are an advanced image ranking speecialist designed to evaluate and rank images based on their quality. Your task is to analyze a list of images and rank the top 3 based on the following criteria:\n\nYou will receive input as below :\n{{ $json.images.toJsonString() }}\n\n### Evaluation Criteria:\n1. **Relevance**:\n   - How closely the images content matches the given keyword or topic.\n   - Whether the content provides detailed and accurate information about the topic.\n\n2. **Credibility**:\n   - Check the credibility of the source (e.g., reputable websites score higher).\n\nInstructions:\n1. Review the list of images provided as input.\n2. Assign a quality score to each images based on the criteria above.\n3. Rank the top 5 images and provide a short reason for their rank based on the evaluation criteria.\n",
        "hasOutputParser": true
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        3800,
        0
      ],
      "id": "d5b38903-7a2f-4217-83d2-d01a653dc9eb",
      "name": "Image Ranking"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.rankedImages",
        "include": "allOtherFields",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        4180,
        0
      ],
      "id": "06c1c0c3-91d9-4017-84d7-bfa8a2670097",
      "name": "Split Out"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        4360,
        0
      ],
      "id": "d6efe77b-a508-435a-86c1-eca082832551",
      "name": "Limit"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are part of a team that creates world class blog posts. \n\nFor each new blog post project, you are provided with a list of keywords and search intent. \n\n- Keywords: The keywords are to what the blog post is meant to rank for. They are scattered throughout the blog and define the topic of the blog post. \n\n- Search intent: The search intent recognises the intent of the user when searching up the keyword which defines be the theme of the blog post, so they click on our blog to satisfy their search. \n\n- Primary keyword: Out of the keywords, there is one keyword known as the primary keyword. The primary keyword will go in the title and first few sentences. It is important that the topic of the blog post is related to the primary keyword so that you can place it into the title and introduction naturally. \n\nGiven a list of keywords and search intent, your job is to understand the goal of th e blog post, identify the thought process behind the flow of the blog post and come up with a preliminary plan for the post. \n\nYour output must: \n\n- Recognise the discussion points of the blog post.\n\n- Be in dot point format.\n\n- Must consider the blog post content will be around 2000 to 2500 words.\n\nYou must ensure that the plan created satisfies the search intent and revolves directly around the given keywords. \n\nWhen making the plan keep in mind that all keywords must be used in the final blog post. \n\nThe final goal of the project is to create a high quality, high value, highly relevant blog post that will satisfy the users search intent and give them everything they need to know about the topic. \n\nA new project just came across your desk with below keywords and search intent:\n\nKeywords: \n{{ $json.property_keywords }}\n\nSearch intent: \n{{ $json.property_intent }}\n\nPrimary keyword: \n{{ $json.property_primary_keyword }}\n\nCreate the preliminary plan."
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -740,
        140
      ],
      "id": "aafac52f-3f59-46c4-bdda-cb152e8f7986",
      "name": "Preliminary Plan"
    },
    {
      "parameters": {
        "jsCode": "// Clean Markdown/JSON syntax\nconst rawOutput = $input.first().json.text;\n\n// Remove ```html, ```json, and triple backticks\nlet cleanedHTML = rawOutput.replace(/```(html|json)?/g, '');\n\n// Trim whitespace and dangling quotes\ncleanedHTML = cleanedHTML.trim().replace(/^\"+|\"+$/g, '');\n\n// Return plain HTML string\nreturn { html: cleanedHTML };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1740,
        0
      ],
      "id": "c59ab3e3-e47b-4e31-9a37-83094009c694",
      "name": "Format to Html Element Only"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "value": "={{ $('Grab New Cluster Info').item.json.url }}",
          "mode": "url"
        },
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Completed|status",
              "statusValue": "Done"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        5520,
        0
      ],
      "id": "4a0c0d05-7f20-4424-8df3-fc6ac89b1bd9",
      "name": "Update Cluster Template Status",
      "credentials": {
        "notionApi": {
          "id": "SpycmLTyq3UWgNYR",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "19c808f2-84dc-8090-bdd9-d5b87ad368e2",
          "mode": "list",
          "cachedResultName": "Completed Blog Post Database",
          "cachedResultUrl": "https://www.notion.so/19c808f284dc8090bdd9d5b87ad368e2"
        },
        "title": "={{ $('Blog Title').first().json.text }}",
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Blog Title|title",
              "title": "={{ $('Blog Title').first().json.text }}"
            },
            {
              "key": "Summary|rich_text",
              "textContent": "={{ $('Meta Description').first().json.text }}"
            },
            {
              "key": "Keyword|rich_text",
              "textContent": "={{ $json.property_keywords }}"
            },
            {
              "key": "Blog Url|url",
              "urlValue": "={{ $('Create Blog Post').first().json.link }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        5720,
        0
      ],
      "id": "40c69ef9-c909-4941-926c-880854928eca",
      "name": "Create New Record (Completed Blog Post)",
      "credentials": {
        "notionApi": {
          "id": "SpycmLTyq3UWgNYR",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "previous-posts",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        880,
        180
      ],
      "id": "2ff5ee16-f315-4599-95d9-ed6cbcdc2bcb",
      "name": "Combine into prev-post obj"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"rankedImages\": [\n    {\n      \"rank\": 1,\n      \"imageRelevance\" : \"Excellent\",\n      \"imageUrl\" :\"www.x.com\",\n      \"reason\": \"Why this article is ranked #1 based on the evaluation criteria.\"\n    }\n  ]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        3880,
        220
      ],
      "id": "c2bc9e9a-e8cc-4db8-a064-89c3fad27cfe",
      "name": "Image Ranking Output Parser"
    },
    {
      "parameters": {
        "jsCode": "const blogHtmlContent = $('Format to Html Element Only').first().json.html;\n\nconst formatValidJson = (value) => {\n  return value.replace(/[\\n\\r]/g, ''); \n}\n\nreturn {\n  \"blogContent\" : JSON.stringify(blogHtmlContent),\n  \"title\" : formatValidJson($('Blog Title').first().json.text),\n  \"slug\" : formatValidJson($('Slug Generator').first().json.text),\n  \"metaDesc\" : formatValidJson($('Meta Description').first().json.text),\n  \"keyphrase\" : formatValidJson($(\"Keyphrase\").first().json.text)\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3360,
        0
      ],
      "id": "51772d07-11d0-49d2-9252-e880e0d2a3ba",
      "name": "Format Valid Json Output"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://google.serper.dev/images",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "={{ $('Blog Title').item.json.text }}"
            },
            {
              "name": "location",
              "value": "United States"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3580,
        0
      ],
      "id": "afb45ca5-4ff1-4652-83cd-e09d46a7903d",
      "name": "Search for Image",
      "credentials": {
        "httpHeaderAuth": {
          "id": "hwIDSBgVDnespPrz",
          "name": "SerperApi Auth account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.wautomate.com/wp-json/wp/v2/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"title\": \"{{ $('Format Valid Json Output').first().json.title }}\",\n  \"content\": {{ $('Format Valid Json Output').first().json.blogContent }},\n  \"slug\": \"{{ $('Format Valid Json Output').first().json.slug }}\",\n  \"status\": \"publish\",\n  \"comment_status\": \"closed\",\n  \"categories\" : [{{ $('Format Categories & Tags Output').first().json.blogCategory }}],\n  \"tags\" : [{{ $('Format Categories & Tags Output').first().json.blogTag }}],\n  \"featured_media\" : \"{{ $('Upload Image To Media Library (Wordpress)').first().json.id }}\",\n  \"meta\": {\n    \"_yoast_wpseo_metadesc\": \"{{ $('Format Valid Json Output').first().json.metaDesc }}\",\n    \"_yoast_wpseo_focuskw\": \"{{ $('Format Valid Json Output').first().json.keyphrase }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5340,
        0
      ],
      "id": "b924cec5-02b7-460c-8e2c-eaee6ff93d3d",
      "name": "Create Blog Post",
      "credentials": {
        "httpBasicAuth": {
          "id": "LztYjmBdaMCJfjgy",
          "name": "Wautomate Wordpress credential"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "RqFFMISHObVf3diD",
          "mode": "list",
          "cachedResultName": "Upload Media to Wordpress Media Library"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "imageUrl": "={{ $json['output.rankedImages'].imageUrl }}",
            "blogContent": "={{ $('Add Internal Links').first().json.text }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "blogContent",
              "displayName": "blogContent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "imageUrl",
              "displayName": "imageUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        4540,
        0
      ],
      "id": "af2980c5-0742-4909-9752-a972eadb5949",
      "name": "Upload Image To Media Library (Wordpress)"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "tw4L7LfI1Gn382Pa",
          "mode": "list",
          "cachedResultName": "Create Blog Post Categories"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "blogContent": "={{ $('Add Internal Links').first().json.text }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "blogContent",
              "displayName": "blogContent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        4740,
        0
      ],
      "id": "9e07f647-0077-42d8-874d-f4c14f547ecf",
      "name": "Create Blog Post Categories"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "4g7TSDp0ZsCSXsU8",
          "mode": "list",
          "cachedResultName": "Create Blog Post Tags"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "blogContent": "={{ $('Add Internal Links').first().json.text }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "blogContent",
              "displayName": "blogContent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        4940,
        0
      ],
      "id": "8e29a244-006c-4fe7-afe9-ed07447e69e1",
      "name": "Create Blog Post Tags"
    },
    {
      "parameters": {
        "jsCode": "const blogCategories = $('Create Blog Post Categories').first().json.categoryID;\nconst blogTags = $('Create Blog Post Tags').first().json.tagID;\n\nconst result = {\n  \"blogCategory\" : blogCategories.map(item => item.id),\n  \"blogTag\" : blogTags.map(item => item.id)\n}\n\nreturn result"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5140,
        0
      ],
      "id": "aae23542-7848-4cd0-b496-4c20045ccb7e",
      "name": "Format Categories & Tags Output"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Create a good focus keyphrase for the following blog post :\n{{ $('Add Internal Links').item.json.text }}\n\nA good focus keyphrase that is SEO-Optimized should have the following citeria :\n- Keyphrase in introduction: Your keyphrase or its synonyms do not appear in the first paragraph. Make sure the topic is clear immediately.\n- Keyphrase in SEO title: Not all the words from your keyphrase appear in the SEO title. For the best SEO results write the exact match of your keyphrase in the SEO title, and put the keyphrase at the beginning of the title.\n- Keyphrase in meta description: The meta description has been specified, but it does not contain the keyphrase. Fix that!\n- Keyphrase in subheading: Use more keyphrases or synonyms in your H2 and H3 subheadings!\n\n Your output must only be the keyphrase and nothing else.Your output of keyphrase should be SEO-optimized, short and concise."
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        3000,
        0
      ],
      "id": "b4acbd7f-9289-4308-8994-0854b599e246",
      "name": "Keyphrase"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "daysInterval": 2,
              "triggerAtHour": 7,
              "triggerAtMinute": 15
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1180,
        140
      ],
      "id": "ea28d279-7243-4ccd-8181-6e38f58f5fc3",
      "name": "Schedule Trigger"
    }
  ],
  "pinData": {},
  "connections": {
    "Research (Perplexity AI)": {
      "main": [
        [
          {
            "node": "Fix Citation Links",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Citation Links": {
      "main": [
        [
          {
            "node": "Post-Planning",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model (Pro)": {
      "ai_languageModel": [
        [
          {
            "node": "Image Ranking",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Add Internal Links",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Convert To HTML",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Preliminary Plan",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Post-Planning",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Keyphrase",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model (Flash)": {
      "ai_languageModel": [
        [
          {
            "node": "Slug Generator",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Blog Title",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Meta Description",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Blog Writer",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Grab New Cluster Info": {
      "main": [
        [
          {
            "node": "Preliminary Plan",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Grab All Previous Posts": {
      "main": [
        [
          {
            "node": "Combine into prev-post obj",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post-Planning": {
      "main": [
        [
          {
            "node": "Blog Writer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Blog Writer": {
      "main": [
        [
          {
            "node": "Grab All Previous Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Internal Links": {
      "main": [
        [
          {
            "node": "Convert To HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert To HTML": {
      "main": [
        [
          {
            "node": "Format to Html Element Only",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Slug Generator": {
      "main": [
        [
          {
            "node": "Blog Title",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Blog Title": {
      "main": [
        [
          {
            "node": "Meta Description",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Meta Description": {
      "main": [
        [
          {
            "node": "Keyphrase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Ranking": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Upload Image To Media Library (Wordpress)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preliminary Plan": {
      "main": [
        [
          {
            "node": "Research (Perplexity AI)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format to Html Element Only": {
      "main": [
        [
          {
            "node": "Slug Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Cluster Template Status": {
      "main": [
        [
          {
            "node": "Create New Record (Completed Blog Post)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine into prev-post obj": {
      "main": [
        [
          {
            "node": "Add Internal Links",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Ranking Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Image Ranking",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Format Valid Json Output": {
      "main": [
        [
          {
            "node": "Search for Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search for Image": {
      "main": [
        [
          {
            "node": "Image Ranking",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Blog Post": {
      "main": [
        [
          {
            "node": "Update Cluster Template Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Image To Media Library (Wordpress)": {
      "main": [
        [
          {
            "node": "Create Blog Post Categories",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Blog Post Categories": {
      "main": [
        [
          {
            "node": "Create Blog Post Tags",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Blog Post Tags": {
      "main": [
        [
          {
            "node": "Format Categories & Tags Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Categories & Tags Output": {
      "main": [
        [
          {
            "node": "Create Blog Post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keyphrase": {
      "main": [
        [
          {
            "node": "Format Valid Json Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Grab New Cluster Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f55cf298-6793-4786-97e4-79174ebde450",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e6a23a1377e872f6f201a296e14c75691e100934cfebe9566c37e5753607d423"
  },
  "id": "jPMpHTqwwxSMpMD2",
  "tags": [
    {
      "createdAt": "2025-03-09T02:36:21.469Z",
      "updatedAt": "2025-03-09T02:36:21.469Z",
      "id": "JkxrhRXRXwrgsTsU",
      "name": "Wautomate Blog Posting"
    },
    {
      "createdAt": "2025-03-09T02:36:21.464Z",
      "updatedAt": "2025-03-09T02:36:21.464Z",
      "id": "qJ6jfZcxtoDxsNay",
      "name": "marketing-automation"
    }
  ]
}
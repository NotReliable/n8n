{
  "name": "POV video template",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -420,
        120
      ],
      "id": "dfe4928a-cb56-4699-94fb-75987e42c3f3",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -420,
        340
      ],
      "id": "69fa09f5-d41a-408e-9d0c-0a721ef1b8bd",
      "name": "Google Sheets"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.idea }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=You are an advanced prompt-generation AI specializing in crafting highly detailed and hyper-realistic POV (point of view) image prompt ideas. Your task is to generate concise, action-driven, immersive prompt ideas that follow a sequential narrative, depicting a “day in the life” experience based on a given video topic.\n\nYour outputs never include double-quotes.  \nYou can skip the part on waking up from bed.  \nDon’t output actions related to wearing clothing.  \nDon’t output actions related to using feet.  \nYou also prioritize more sensational and unique scenes for that given scenario, instead of common things people do generally.  \n\n### Guidelines:\n- Every output represents a first-person perspective, making the viewer feel like they are experiencing the moment.\n- Use action-based verbs like gripping, running, reaching, holding, walking toward, stumbling, climbing, lifting, turning, stepping into.\n- Use keywords such as **POV, GoPro-style, first-person view, point of view** to reinforce immersion.\n- Keep all outputs between **5 to 16 words** long.\n- **Never use double quotes** in any output.\n- All scenes must be hyper-realistic, high quality, and cinematic, evoking strong visual and emotional impact.\n- Each set of prompts must follow a logical sequence, covering a full day in the life from morning to night, ensuring narrative continuity.\n- Avoid introspection or vague descriptions—focus on physical actions and interactions that build a cohesive, immersive story.\n\n### Examples:\n\n#### **Topic: A Peasant’s Day in Medieval Europe**  \n- Pushing open a wooden cottage door  \n- Scooping water from a village well  \n- Kneeling to tie worn leather shoes  \n- Walking through a bustling market square  \n- Handing a silver coin to a merchant  \n- Carrying a sack of wheat up a hill  \n- Hammering nails into a wooden fence  \n- Stirring stew over a crackling fire  \n- Placing a candle by the bedside  \n\n#### **Topic: A Cyberpunk Mercenary’s Routine**  \n- Pushing aside tangled wires on a desk  \n- Scanning a wrist implant for mission updates  \n- Loading a plasma pistol in a dim alley  \n- Stepping onto a hover bike in the rain  \n- Swiping a keycard through a vault scanner  \n- Ducking behind cover as drones patrol ahead  \n- Hacking a neon-lit terminal with gloved fingers  \n- Collapsing onto a metal cot in exhaustion  \n\n#### **Topic: A Soldier’s Day in World War I**  \n- Wiping dirt from a battered helmet  \n- Climbing out of a damp trench at dawn  \n- Holding a rusted rifle with trembling hands  \n- Walking through thick fog past barbed wire  \n- Rushing toward an enemy bunker under fire  \n- Reloading behind sandbags as shells explode  \n- Bandaging a soldier’s wound with torn cloth  \n- Lighting a cigarette under a moonlit sky  \n- Resting against a wooden crate in the trenches  \n\nEach generated sequence tells a visual story, pulling the viewer into a cohesive first-person experience from start to finish."
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -500,
        560
      ],
      "id": "a9989743-d364-4465-af05-4a9efc166976",
      "name": "Generate titles"
    },
    {
      "parameters": {
        "options": {
          "numberOfItems": 5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserItemList",
      "typeVersion": 1,
      "position": [
        -320,
        720
      ],
      "id": "a53e7eed-a105-4050-a9fd-70f390d11786",
      "name": "Item List Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -500,
        740
      ],
      "id": "05cce0fa-78f0-49be-9abb-c2eb8e9efef0",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "o1-mini",
          "mode": "id"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an advanced prompt-generation AI specializing in expanding short POV (point-of-view) image prompt ideas into detailed, hyper-realistic prompts optimized for image-generation models like Flux and MidJourney.  \nYour task is to take a brief input and transform it into a rich, cinematic, immersive prompt that strictly adheres to a first-person perspective, making the viewer feel as if they are physically present in the scene.\n\nThis is the short prompt idea you need to expand upon: {{ $json.response.text }}\nEvery prompt must use this to describe the enviroment of the image: {{  $('Google Sheets').first().json.enviroment_prompt }}\n\n### Prompt Structure:\n1. Foreground  \n   - Describe the hands, limbs, or feet of the viewer.  \n   - Must start with:  \n     \"First-person view POV GoPro shot of [relevant limb]...\"\n   \n2. Background  \n   - Describe the scenery using the format:  \n     \"In the background, [describe scenery]\"\n\n### Most Important Guidelines\n- Every image must be a first-person perspective shot—the viewer must feel like they are experiencing the moment, not just observing it.\n- A visible limb (hands or feet) must always be present and actively engaged (e.g., gripping, reaching, pushing, lifting, or interacting naturally).\n- The framing must be dynamic and interactive, mimicking real-world human vision, ensuring motion, depth, and immersion, similar to a GoPro or head-mounted camera shot.\n\n### Other Key Guidelines\n- Full-body awareness: The prompt should subtly remind the viewer they have a physical presence (e.g., weight shifting, breath fogging in cold air, or fingers trembling from adrenaline).\n- Sensory depth: Engage multiple senses (sight, touch, temperature, sound, even smell) to heighten realism.\n- World interaction: The hands/feet should not just be visible but should actively interact with the environment (e.g., clutching, adjusting, stepping forward, brushing against surfaces).\n- Keep prompts under 1000 characters in a single cinematic sentence without unnecessary formatting or explanation.\n\n### Examples\n1. Input: Climbing a fire escape over neon streets  \n   Output: POV of gloved hands straining to pull up against the slick, rusted fire escape ladder, neon lights dancing in the puddles below, cold rain sliding down trembling fingers, distant sirens wailing as my breath fogs the damp air, a rooftop edge just within reach.\n\n2. Input: Reaching for a coffee in a bustling café  \n   Output: POV of my outstretched hand wrapping around a steaming mug, heat radiating through the ceramic, the barista’s tattooed arm extending the cup towards me, the chatter of morning rush echoing off tiled walls, sunlight catching floating dust as the rich aroma of espresso fills my breath.\n\n3. Input: Waking up in a medieval tavern  \n   Output: POV of my rough, calloused hands rubbing heavy eyes, the flickering candlelight warping shadows on wooden beams, my fingers tracing the sweat-soaked grooves of a tankard, the thick scent of ale and smoke clinging to the air, muffled laughter and the distant pluck of a lute stirring my senses awake."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        120,
        60
      ],
      "id": "b797d725-cd85-4108-9639-7d89322e3719",
      "name": "OpenAI"
    },
    {
      "parameters": {
        "content": "## Generate Prompt",
        "height": 220,
        "width": 500,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "935dcf3a-4b49-4947-95c9-21978904fbbc",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Generate Images",
        "height": 220,
        "width": 500,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        260
      ],
      "id": "eee6ec38-6700-402c-aa6b-8b5d96987900",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "url": "=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-Key"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        380,
        320
      ],
      "id": "44e0b776-e850-4875-be6c-470fa972204d",
      "name": "Get Image"
    },
    {
      "parameters": {
        "content": "## Generate Videos",
        "height": 220,
        "width": 500,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        520
      ],
      "id": "bd89924d-7057-40cf-9343-6aad5b790fb0",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.piapi.ai/api/v1/task",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-Key"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"model\": \"kling\",\n  \"mode\": \"std\",\n  \"task_type\": \"video_generation\",\n  \"input\": {\n    \"prompt\": \"{{ $json.data.input.prompt }}\",\n    \"negative_prompt\": \"bad quality\",\n    \"cfg_scale\": 0.65,\n    \"duration\": 5,\n    \"image_url\": \"{{ $json.data.output.image_url }}\",\n    \"camera_control\": {\n      \"type\": \"simple\",\n      \"config\": {\n        \"horizontal\": 0,\n        \"vertical\": 0,\n        \"pan\": 0,\n        \"tilt\": 0,\n        \"roll\": 0,\n        \"zoom\": 0\n      }\n    }\n  },\n  \"config\": {}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        20,
        580
      ],
      "id": "ef24d706-4ecb-48ea-b4c4-4a361b932cd1",
      "name": "Image to video"
    },
    {
      "parameters": {
        "url": "=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-Key"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        380,
        580
      ],
      "id": "5476c0d8-4ddd-4d49-a26e-d38ae0dee079",
      "name": "Get Video"
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        200,
        320
      ],
      "id": "3849cf18-c322-4358-b7a4-0d3376aef01b",
      "name": "Wait 2 minutes",
      "webhookId": "afb1958a-091e-4bad-aa25-680c5d5cdd17"
    },
    {
      "parameters": {
        "amount": 10,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        200,
        580
      ],
      "id": "833c6842-94a1-4d7b-8883-871809d4bfb7",
      "name": "Wait 10 minutes",
      "webhookId": "afb1958a-091e-4bad-aa25-680c5d5cdd17"
    },
    {
      "parameters": {
        "content": "## Generate Sounds",
        "height": 220,
        "width": 500,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        780
      ],
      "id": "c4595e45-82fc-43a3-8123-9537aa49567a",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/sound-generation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"text\": \"no voice {{ $('OpenAI').item.json.message.content.substring(0, 440) }}\",\n  \"duration_seconds\": 5,\n  \"prompt_influence\": 0.6\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        20,
        840
      ],
      "id": "6be60f22-a115-4455-adc2-202ab25dbf1e",
      "name": "Text to sound"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.piapi.ai/api/v1/task",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-Key"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"model\": \"Qubico/flux1-dev\",\n  \"task_type\": \"txt2img\",\n  \"input\": {\n    \"prompt\": \"{{ $json.message.content }}\",\n    \"width\": 540,\n    \"height\": 960\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        20,
        320
      ],
      "id": "7051b68e-7e78-489a-8dd9-e66b91ba670e",
      "name": "Text to image"
    },
    {
      "parameters": {
        "name": "={{ $json.data.task_id }}.mp3",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        200,
        840
      ],
      "id": "4bbf9555-9fff-464d-b071-55f51360e914",
      "name": "Upload Mp3"
    },
    {
      "parameters": {
        "operation": "share",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "permissionsUi": {
          "permissionsValues": {
            "role": "writer",
            "type": "anyone",
            "allowFileDiscovery": true
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        380,
        840
      ],
      "id": "fd575407-1745-4560-a005-ded5a5db3d43",
      "name": "Grant Access"
    },
    {
      "parameters": {
        "content": "## OUTPUT: Final Video",
        "height": 1020,
        "width": 420,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        660,
        0
      ],
      "id": "ba5955f6-132d-4236-b459-bcc320b3636a",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "numberInputs": 4,
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        820,
        120
      ],
      "id": "e03e6096-e476-41ab-b939-6cc49ff6a8aa",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "const getFallbackValue = (arr, index) => {\n  const total = arr.length;\n  \n  for (let i = 0; i < total; i++) {\n    if (arr[i] && i !== index && i !== index - 1 && i !== index + 1) {\n      return arr[i];\n    }\n  }\n  \n  for (let i = 0; i < total; i++) {\n    if (arr[i] && i !== index) return arr[i];\n  }\n\n  return null;\n};\n\nreturn [\n  {\n    scene_titles: items.map((item, index, arr) =>\n      item?.json?.response?.text ?? getFallbackValue(arr.map(it => it?.json?.response?.text), index)\n    ),\n    video_urls: items.map((item, index, arr) =>\n      item?.json?.data?.output?.video_url ?? getFallbackValue(arr.map(it => it?.json?.data?.output?.video_url), index)\n    ),\n    sound_urls: items.map((item, index, arr) =>\n      item?.json?.webContentLink ?? getFallbackValue(arr.map(it => it?.json?.webContentLink), index)\n    )\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        820,
        360
      ],
      "id": "def5f2cf-867f-401d-a681-7a2f687d574a",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.creatomate.com/v1/renders",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"template_id\": \"29f4c8d0-4009-4e8d-bf62-0b645684a1a6\",\n  \"modifications\": {\n    \"Audio-1.source\": \"{{ $json.sound_urls[0] }}\",\n    \"Audio-2.source\": \"{{ $json.sound_urls[1] }}\",\n    \"Audio-3.source\": \"{{ $json.sound_urls[2] }}\",\n    \"Audio-4.source\": \"{{ $json.sound_urls[3] }}\",\n    \"Audio-5.source\": \"{{ $json.sound_urls[4] }}\",\n\n    \"Video-1.source\": \"{{ $json.video_urls[0] }}\",\n    \"Video-2.source\": \"{{ $json.video_urls[1] }}\",\n    \"Video-3.source\": \"{{ $json.video_urls[2] }}\",\n    \"Video-4.source\": \"{{ $json.video_urls[3] }}\",\n    \"Video-5.source\": \"{{ $json.video_urls[4] }}\",\n\n    \"Text-1.text\": \"{{ $json.scene_titles[0] }}\",\n    \"Text-2.text\": \"{{ $json.scene_titles[1] }}\",\n    \"Text-3.text\": \"{{ $json.scene_titles[2] }}\",\n    \"Text-4.text\": \"{{ $json.scene_titles[3] }}\",\n    \"Text-5.text\": \"{{ $json.scene_titles[4] }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        820,
        600
      ],
      "id": "31a378be-bed6-4554-8465-897d0a8c2b59",
      "name": "Render Video",
      "executeOnce": true
    },
    {
      "parameters": {
        "content": "## INPUT: Video topic",
        "height": 840,
        "width": 400,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -580,
        60
      ],
      "id": "a6828810-2698-495c-a564-61c4e9f081e2",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        820,
        840
      ],
      "id": "ac4ce0d1-a01b-4cf3-8219-b9a786045b1d",
      "name": "Update google sheet"
    },
    {
      "parameters": {
        "amount": 10,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1340,
        80
      ],
      "id": "6818ca6a-c1a2-4ec2-9892-838d4de1391b",
      "name": "Wait",
      "webhookId": "b880e7c9-a094-4b60-9a46-091f59073f6a"
    },
    {
      "parameters": {
        "url": "={{ $('Update google sheet').item.json.final_output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1340,
        320
      ],
      "id": "3257e310-30d8-4575-b862-e6116db77fa7",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "content": "## Publish Video",
        "height": 920,
        "width": 320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1220,
        0
      ],
      "id": "5a422fc8-4fd2-48ef-88bc-ef6cafacc008",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "upload",
        "title": "={{ $('Google Sheets').first().json.idea }}",
        "regionCode": "US",
        "categoryId": "24",
        "options": {
          "description": "={{ $('OpenAI').first().json.message.content }}",
          "privacyStatus": "public"
        }
      },
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        1340,
        580
      ],
      "id": "e413cb89-7ee0-4190-b09c-5bbcad6042be",
      "name": "YouTube"
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Generate titles",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item List Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Generate titles",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Generate titles",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Generate titles": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Text to image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Image": {
      "main": [
        [
          {
            "node": "Image to video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image to video": {
      "main": [
        [
          {
            "node": "Wait 10 minutes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 2 minutes": {
      "main": [
        [
          {
            "node": "Get Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 10 minutes": {
      "main": [
        [
          {
            "node": "Get Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Video": {
      "main": [
        [
          {
            "node": "Text to sound",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Text to image": {
      "main": [
        [
          {
            "node": "Wait 2 minutes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text to sound": {
      "main": [
        [
          {
            "node": "Upload Mp3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Mp3": {
      "main": [
        [
          {
            "node": "Grant Access",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Grant Access": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Render Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Render Video": {
      "main": [
        [
          {
            "node": "Update google sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update google sheet": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "YouTube",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f9dadec7-3c31-4e1d-b6cd-a2f6b9bac358",
  "meta": {
    "instanceId": "e6a23a1377e872f6f201a296e14c75691e100934cfebe9566c37e5753607d423"
  },
  "id": "Gh5h0DWgl862Vg2o",
  "tags": []
}